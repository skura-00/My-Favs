//
//  Recommendation.swift
//  My Favs!
//
//  Created by Sachi Kurata on 2023/06/27.
//

import Foundation

//"Generated by ChatGPT (GPT-3.5) developed by OpenAI (2021)."
func makeAPIRequest(prompt: String, completionHandler: @escaping (String?, Error?) -> Void) {
    let apiKey = "YOUR_API_KEY"
    let urlString = "https://api.openai.com/v1/engines/davinci-codex/completions"
    
    guard let url = URL(string: urlString) else {
        completionHandler(nil, NSError(domain: "Invalid URL", code: 0, userInfo: nil))
        return
    }
    
    var request = URLRequest(url: url)
    request.httpMethod = "POST"
    request.setValue("Bearer \(apiKey)", forHTTPHeaderField: "Authorization")
    
    let parameters = [
        "prompt": prompt,
        "temperature": 0.7, // Adjust the temperature for varied responses
        "max_tokens": 100, // Set the maximum number of tokens in the response
        "top_p": 1.0 // Adjust the top-p value for more focused responses
    ] as [String : Any]
    
    request.httpBody = try? JSONSerialization.data(withJSONObject: parameters, options: [])
    
    let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
        guard let data = data else {
            completionHandler(nil, error)
            return
        }
        
        if let responseJSON = try? JSONSerialization.jsonObject(with: data, options: []) as? [String: Any],
           let choices = responseJSON["choices"] as? [[String: Any]],
           let completion = choices.first,
           let text = completion["text"] as? String {
            completionHandler(text, nil)
        } else {
            completionHandler(nil, NSError(domain: "Invalid response", code: 0, userInfo: nil))
        }
    }
    
    task.resume()
}

// Example usage
//let prompt = "I like action and adventure movies. Can you recommend a good movie for me?"
//makeAPIRequest(prompt: prompt) { (response, error) in
//    if let response = response {
//        // Process the response and extract the recommended movie(s)
//        print(response)
//    } else if let error = error {
//        // Handle the error
//        print("Error: \(error)")
//    }
//}

//In this code snippet, you'll need to replace "YOUR_API_KEY" with your actual OpenAI API key. Additionally, you can adjust the parameters in the parameters dictionary to fine-tune the AI-generated responses according to your preferences.
//
//The makeAPIRequest function sends a POST request to the API endpoint using the Davinci Codex model, which is well-suited for generating longer-form text. The prompt provided should specify the user's movie preferences or any relevant context. The API response contains the generated text, which can be processed to extract the recommended movie(s) to display in your app.
//
//Remember to add appropriate error handling and UI updates based on your app's requirements. Additionally, you may need to implement a method for obtaining and processing user feedback to improve subsequent recommendations.
